////////////////////////////////////////////////////////////////
// THIS FILE IS AUTOMATICALLY GENERATED -- DO NOT MODIFY!!
// USE COPY & PASTE TO MAKE USE OF THE FUNCTION IMPLEMENTATIONS!!
////////////////////////////////////////////////////////////////
// Generated by kl2exe version 1.11.2
////////////////////////////////////////////////////////////////

#include "AlembicOFaceSet_functions.h"


#include "extension.h"
  

using namespace Fabric::EDK;


// Defined at OFaceSet.kl:9:1
FABRIC_EXT_EXPORT void AlembicOFaceSet_construct(
  Fabric::EDK::KL::Traits< Fabric::EDK::KL::AlembicOFaceSet >::IOParam this_
)
{
  ALEMBIC_TRY_STATEMENT("AlembicOFaceSet_construct")

  this_->handle = NULL;
  
  ALEMBIC_CATCH_STATEMENT("AlembicOFaceSet_construct")
}

// Defined at OFaceSet.kl:10:1
FABRIC_EXT_EXPORT void AlembicOFaceSet_free(
  Fabric::EDK::KL::Traits< Fabric::EDK::KL::AlembicOFaceSet >::IOParam this_
)
{
  ALEMBIC_TRY_STATEMENT("AlembicOFaceSet_free")

  AbcG::OFaceSet* abcThis_ = NULL;
  if(!conv_from_AbcBasePtr<KL::AlembicOFaceSet, AbcG::OFaceSet>(this_, abcThis_)){
    return;
  }
  free_AbcBasePtr(AbcG::OFaceSet)
  
  ALEMBIC_CATCH_STATEMENT("AlembicOFaceSet_free")
}

// Defined at OFaceSet.kl:11:1
FABRIC_EXT_EXPORT Fabric::EDK::KL::Boolean AlembicOFaceSet_valid(
  Fabric::EDK::KL::Traits< Fabric::EDK::KL::AlembicOFaceSet >::INParam this_
)
{
  ALEMBIC_TRY_STATEMENT("AlembicOFaceSet_valid")

  AbcG::OFaceSet* abcThis_ = NULL;
  if(!conv_from_AbcBasePtr<KL::AlembicOFaceSet, AbcG::OFaceSet>(this_, abcThis_)){
    return false;
  }
  bool abc_result = abcThis_->valid();
  KL::Boolean _result;
  conv_to_baseType<KL::Boolean, bool>(abc_result, _result);
  return _result;

  ALEMBIC_CATCH_STATEMENT_RETURN("AlembicOFaceSet_valid", false)
}

// Defined at OFaceSet.kl:14:1
FABRIC_EXT_EXPORT void AlembicOFaceSet_getSchema(
  Fabric::EDK::KL::Traits< Fabric::EDK::KL::AlembicOFaceSetSchema >::Result _result,
  Fabric::EDK::KL::Traits< Fabric::EDK::KL::AlembicOFaceSet >::INParam this_
)
{
  ALEMBIC_TRY_STATEMENT("AlembicOFaceSet_getSchema")

  AbcG::OFaceSet* abcThis_ = NULL;
  if(!conv_from_AbcBasePtr<KL::AlembicOFaceSet, AbcG::OFaceSet>(this_, abcThis_)){
    setError("Error in AlembicOFaceSet_getSchema. unable to convert: this_");
    return;
  }
  AbcG::OFaceSetSchema* abc_result = new AbcG::OFaceSetSchema(abcThis_->getSchema());
  conv_to_AbcBasePtr<KL::AlembicOFaceSetSchema, AbcG::OFaceSetSchema>(abc_result, _result, true);

  ALEMBIC_CATCH_STATEMENT("AlembicOFaceSet_getSchema")
}
