/*
 *  Copyright 2010-2014 Fabric Software Inc. All rights reserved.
 */

////////////////////////////////////////////////////////////////
// THIS FILE IS AUTOMATICALLY GENERATED -- DO NOT MODIFY!!
////////////////////////////////////////////////////////////////
// Generated by Fabric Engine Alembic Mapping Sconscript
////////////////////////////////////////////////////////////////

require Math;

object AlembicI__KLTYPE__ArrayProperty {
  AlembicIArrayProperty prop;
};

function AlembicI__KLTYPE__ArrayProperty(AlembicICompoundProperty parent, String name) {
  this.prop = AlembicIArrayProperty(parent, name);
}

function AlembicI__KLTYPE__ArrayProperty(AlembicIArrayProperty prop) {
  this.prop = prop;
}

function Boolean AlembicI__KLTYPE__ArrayProperty.valid() {
  return this.prop.valid();
}

function AlembicI__KLTYPE__ArrayProperty.reset!() {
  this.prop.reset();
}

function AlembicPropertyHeader AlembicI__KLTYPE__ArrayProperty.getHeader() {
  return this.prop.getHeader();
}

function String AlembicI__KLTYPE__ArrayProperty.getName() {
  return this.prop.getName();
}

function AlembicPropertyType AlembicI__KLTYPE__ArrayProperty.getPropertyType() {
  return this.prop.getPropertyType();
}

function Boolean AlembicI__KLTYPE__ArrayProperty.isScalar() {
  return this.prop.isScalar();
}

function Boolean AlembicI__KLTYPE__ArrayProperty.isArray() {
  return this.prop.isArray();
}

function Boolean AlembicI__KLTYPE__ArrayProperty.isCompound() {
  return this.prop.isCompound();
}

function Boolean AlembicI__KLTYPE__ArrayProperty.isSimple() {
  return this.prop.isSimple();
}

function AlembicMetaData AlembicI__KLTYPE__ArrayProperty.getMetaData() {
  return this.prop.getMetaData();
}

function AlembicDataType AlembicI__KLTYPE__ArrayProperty.getDataType() {
  return this.prop.getDataType();
}

function AlembicTimeSampling AlembicI__KLTYPE__ArrayProperty.getTimeSampling() {
  return this.prop.getTimeSampling();
}

function AlembicIObject AlembicI__KLTYPE__ArrayProperty.getObject() {
  return this.prop.getObject();
}

function UInt32 AlembicI__KLTYPE__ArrayProperty.getNumSamples() {
  return this.prop.getNumSamples();
}
function Boolean AlembicI__KLTYPE__ArrayProperty.isConstant() {
  return this.prop.isConstant();
}
function AlembicICompoundProperty AlembicI__KLTYPE__ArrayProperty.getParent() {
  return this.prop.getParent();
}

function __PROPKLTYPE__[] AlembicI__KLTYPE__ArrayProperty.get(AlembicISampleSelector iSS) {
  AlembicDataType dt = this.getDataType();
  __PROPKLTYPE__ values[];
  if(dt.getExtent() != 1) {
    setError('AlembicI__KLTYPE__ArrayProperty.get: Extent != 1.');
    return values;
  }
  if(dt.getPod() == Alembic___ABCPOD__)
    values = this.prop.getAs__KLTYPE__(iSS);
  else
    setError('AlembicI__KLTYPE__ArrayProperty.get: Encapsulated AlembicIArrayProperty has invalid POD.');
  return values;
}

function __PROPKLTYPE__[] AlembicI__KLTYPE__ArrayProperty.get() {
  return this.get(AlembicISampleSelector(0));
}
