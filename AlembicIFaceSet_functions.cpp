////////////////////////////////////////////////////////////////
// THIS FILE IS AUTOMATICALLY GENERATED -- DO NOT MODIFY!!
// USE COPY & PASTE TO MAKE USE OF THE FUNCTION IMPLEMENTATIONS!!
////////////////////////////////////////////////////////////////
// Generated by kl2exe version 1.11.2
////////////////////////////////////////////////////////////////

#include "AlembicIFaceSet_functions.h"


#include "extension.h"
  

using namespace Fabric::EDK;


// Defined at IFaceSet.kl:9:1
FABRIC_EXT_EXPORT void AlembicIFaceSet_construct(
  Fabric::EDK::KL::Traits< Fabric::EDK::KL::AlembicIFaceSet >::IOParam this_
)
{
  ALEMBIC_TRY_STATEMENT("AlembicIFaceSet_construct")

  this_->handle = NULL;
  
  ALEMBIC_CATCH_STATEMENT("AlembicIFaceSet_construct")
}

// Defined at IFaceSet.kl:10:1
FABRIC_EXT_EXPORT void AlembicIFaceSet_free(
  Fabric::EDK::KL::Traits< Fabric::EDK::KL::AlembicIFaceSet >::IOParam this_
)
{
  ALEMBIC_TRY_STATEMENT("AlembicIFaceSet_free")

  AbcG::IFaceSet* abcThis_ = NULL;
  if(!conv_from_AbcBasePtr<KL::AlembicIFaceSet, AbcG::IFaceSet>(this_, abcThis_)){
    return;
  }
  free_AbcBasePtr(AbcG::IFaceSet)
  
  ALEMBIC_CATCH_STATEMENT("AlembicIFaceSet_free")
}

// Defined at IFaceSet.kl:11:1
FABRIC_EXT_EXPORT Fabric::EDK::KL::Boolean AlembicIFaceSet_valid(
  Fabric::EDK::KL::Traits< Fabric::EDK::KL::AlembicIFaceSet >::INParam this_
)
{
  ALEMBIC_TRY_STATEMENT("AlembicIFaceSet_valid")

  AbcG::IFaceSet* abcThis_ = NULL;
  if(!conv_from_AbcBasePtr<KL::AlembicIFaceSet, AbcG::IFaceSet>(this_, abcThis_)){
    return false;
  }
  bool abc_result = abcThis_->valid();
  KL::Boolean _result;
  conv_to_baseType<KL::Boolean, bool>(abc_result, _result);
  return _result;

  ALEMBIC_CATCH_STATEMENT_RETURN("AlembicIFaceSet_valid", false)
}

// Defined at IFaceSet.kl:14:1
FABRIC_EXT_EXPORT void AlembicIFaceSet_getSchema(
  Fabric::EDK::KL::Traits< Fabric::EDK::KL::AlembicIFaceSetSchema >::Result _result,
  Fabric::EDK::KL::Traits< Fabric::EDK::KL::AlembicIFaceSet >::INParam this_
)
{
  ALEMBIC_TRY_STATEMENT("AlembicIFaceSet_getSchema")

  AbcG::IFaceSet* abcThis_ = NULL;
  if(!conv_from_AbcBasePtr<KL::AlembicIFaceSet, AbcG::IFaceSet>(this_, abcThis_)){
    setError("Error in AlembicIFaceSet_getSchema. unable to convert: this_");
    return;
  }
  AbcG::IFaceSetSchema* abc_result = new AbcG::IFaceSetSchema(abcThis_->getSchema());
  conv_to_AbcBasePtr<KL::AlembicIFaceSetSchema, AbcG::IFaceSetSchema>(abc_result, _result, true);

  ALEMBIC_CATCH_STATEMENT("AlembicIFaceSet_getSchema")
}
