/*
 *  Copyright 2010-2014 Fabric Software Inc. All rights reserved.
 */

////////////////////////////////////////////////////////////////
// THIS FILE IS AUTOMATICALLY GENERATED -- DO NOT MODIFY!!
////////////////////////////////////////////////////////////////
// Generated by Fabric Engine Alembic Mapping Sconscript
////////////////////////////////////////////////////////////////

require Math;

object AlembicO__KLTYPE__ArrayProperty {
  AlembicOArrayProperty prop;
};

function AlembicO__KLTYPE__ArrayProperty(AlembicOCompoundProperty parent, String name) {
  this.prop = AlembicOArrayProperty(parent, name, AlembicDataType(Alembic___ABCPOD__, __ABCEXTENT__));
}

function AlembicO__KLTYPE__ArrayProperty(AlembicOArrayProperty prop) {
  this.prop = prop;
}

function Boolean AlembicO__KLTYPE__ArrayProperty.valid() {
  return this.prop.valid();
}

function AlembicO__KLTYPE__ArrayProperty.reset!() {
  this.prop.reset();
}

function AlembicPropertyHeader AlembicO__KLTYPE__ArrayProperty.getHeader() {
  return this.prop.getHeader();
}

function String AlembicO__KLTYPE__ArrayProperty.getName() {
  return this.prop.getName();
}

function AlembicPropertyType AlembicO__KLTYPE__ArrayProperty.getPropertyType() {
  return this.prop.getPropertyType();
}

function Boolean AlembicO__KLTYPE__ArrayProperty.isScalar() {
  return this.prop.isScalar();
}

function Boolean AlembicO__KLTYPE__ArrayProperty.isArray() {
  return this.prop.isArray();
}

function Boolean AlembicO__KLTYPE__ArrayProperty.isCompound() {
  return this.prop.isCompound();
}

function Boolean AlembicO__KLTYPE__ArrayProperty.isSimple() {
  return this.prop.isSimple();
}

function AlembicMetaData AlembicO__KLTYPE__ArrayProperty.getMetaData() {
  return this.prop.getMetaData();
}

function AlembicDataType AlembicO__KLTYPE__ArrayProperty.getDataType() {
  return this.prop.getDataType();
}

function AlembicTimeSampling AlembicO__KLTYPE__ArrayProperty.getTimeSampling() {
  return this.prop.getTimeSampling();
}

function AlembicOObject AlembicO__KLTYPE__ArrayProperty.getObject() {
  return this.prop.getObject();
}

function UInt32 AlembicO__KLTYPE__ArrayProperty.getNumSamples() {
  return this.prop.getNumSamples();
}

function AlembicOCompoundProperty AlembicO__KLTYPE__ArrayProperty.getParent() {
  return this.prop.getParent();
}

function AlembicO__KLTYPE__ArrayProperty.setTimeSampling!(UInt32 index) {
  this.prop.setTimeSampling(index);
}

function AlembicO__KLTYPE__ArrayProperty.setFromPrevious!() {
  this.prop.setFromPrevious();
}

function AlembicO__KLTYPE__ArrayProperty.set!(__KLTYPE__ values<>) {
  AlembicDataType dt = this.getDataType();
  if(dt.getExtent() != __ABCEXTENT__) {
    setError('AlembicO__KLTYPE__ArrayProperty.set: Extent != __ABCEXTENT__.');
    return;
  }
  Size offset = 0;
  switch(dt.getPod())
  {
    case Alembic_kInt8POD:
    {
      SInt8 packed[];
      packed.resize(__ABCEXTENT__ * values.size());
      for(Size i=0;i<values.size();i++) {
        __KLTYPE__ value = values[i];
        __KLUNPACK__
        offset+=__ABCEXTENT__;
      }
      this.prop.setAsSInt8(packed);
      break;
    }
    case Alembic_kInt16POD:
    {
      SInt16 packed[];
      packed.resize(__ABCEXTENT__ * values.size());
      for(Size i=0;i<values.size();i++) {
        __KLTYPE__ value = values[i];
        __KLUNPACK__
        offset+=__ABCEXTENT__;
      }
      this.prop.setAsSInt16(packed);
      break;
    }
    case Alembic_kInt32POD:
    {
      SInt32 packed[];
      packed.resize(__ABCEXTENT__ * values.size());
      for(Size i=0;i<values.size();i++) {
        __KLTYPE__ value = values[i];
        __KLUNPACK__
        offset+=__ABCEXTENT__;
      }
      this.prop.setAsSInt32(packed);
      break;
    }
    case Alembic_kInt64POD:
    {
      SInt64 packed[];
      packed.resize(__ABCEXTENT__ * values.size());
      for(Size i=0;i<values.size();i++) {
        __KLTYPE__ value = values[i];
        __KLUNPACK__
        offset+=__ABCEXTENT__;
      }
      this.prop.setAsSInt64(packed);
      break;
    }
    case Alembic_kUint8POD:
    {
      UInt8 packed[];
      packed.resize(__ABCEXTENT__ * values.size());
      for(Size i=0;i<values.size();i++) {
        __KLTYPE__ value = values[i];
        __KLUNPACK__
        offset+=__ABCEXTENT__;
      }
      this.prop.setAsUInt8(packed);
      break;
    }
    case Alembic_kUint16POD:
    {
      UInt16 packed[];
      packed.resize(__ABCEXTENT__ * values.size());
      for(Size i=0;i<values.size();i++) {
        __KLTYPE__ value = values[i];
        __KLUNPACK__
        offset+=__ABCEXTENT__;
      }
      this.prop.setAsUInt16(packed);
      break;
    }
    case Alembic_kUint32POD:
    {
      UInt32 packed[];
      packed.resize(__ABCEXTENT__ * values.size());
      for(Size i=0;i<values.size();i++) {
        __KLTYPE__ value = values[i];
        __KLUNPACK__
        offset+=__ABCEXTENT__;
      }
      this.prop.setAsUInt32(packed);
      break;
    }
    case Alembic_kUint64POD:
    {
      UInt64 packed[];
      packed.resize(__ABCEXTENT__ * values.size());
      for(Size i=0;i<values.size();i++) {
        __KLTYPE__ value = values[i];
        __KLUNPACK__
        offset+=__ABCEXTENT__;
      }
      this.prop.setAsUInt64(packed);
      break;
    }
    case Alembic_kFloat16POD:
    {
      Float32 packed[];
      packed.resize(__ABCEXTENT__ * values.size());
      for(Size i=0;i<values.size();i++) {
        __KLTYPE__ value = values[i];
        __KLUNPACK__
        offset+=__ABCEXTENT__;
      }
      this.prop.setAsFloat16(packed);
      break;
    }
    case Alembic_kFloat32POD:
    {
      Float32 packed[];
      packed.resize(__ABCEXTENT__ * values.size());
      for(Size i=0;i<values.size();i++) {
        __KLTYPE__ value = values[i];
        __KLUNPACK__
        offset+=__ABCEXTENT__;
      }
      this.prop.setAsFloat32(packed);
      break;
    }
    case Alembic_kFloat64POD:
    {
      Float64 packed[];
      packed.resize(__ABCEXTENT__ * values.size());
      for(Size i=0;i<values.size();i++) {
        __KLTYPE__ value = values[i];
        __KLUNPACK__
        offset+=__ABCEXTENT__;
      }
      this.prop.setAsFloat64(packed);
      break;
    }
    default:
    {
      setError('AlembicO__KLTYPE__ArrayProperty.set: Encapsulated AlembicOArrayProperty has invalid POD.');
    }
  }
}
